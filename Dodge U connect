//Dodge U Connect canbus wake up message testing. 

#include <arduino.h>
#include <eXoCAN.h>
#define bluePillLED PC13

struct can_messages {
 int can_id;
 uint8_t can_message[8];
};

static can_messages cMessages[6] = { 
  {{0x122},{0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},  // Wakeup message 1
  {{0x2FA},{0x00, 0x01, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00}},  // Wakeup message 2
  {{0x3D3},{0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55}},  // Wakeup message 3
  {{0x3E8},{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},  // Wakeup message 4 (VIN placeholder set to 0x00)
  {{0x3E8},{0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},  // Wakeup message 5 (VIN placeholder set to 0x00)
  {{0x3E8},{0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}   // Wakeup message 6 (VIN placeholder set to 0x00)
};

uint8_t txDataLen = 8;
uint32_t txDly = 100; // mSec

// 11b IDs, 125k bit rate, tja1040, portA pins 11,12
eXoCAN can(STD_ID_LEN, BR125K, PORTA_11_12_XCVR); 

void setup()
{ 
  pinMode(bluePillLED, OUTPUT);
}

uint32_t last = 0;
int cMSG = 0;

void loop()
{    
  if (millis() / txDly != last)     //executes every txDly ms  
  {  
    last = millis() / txDly;

    can.transmit(cMessages[cMSG].can_id, cMessages[cMSG].can_message, txDataLen);  
   
    if (cMSG<(sizeof(cMessages) / sizeof(cMessages[0]))) {
      cMSG++;          
    }     
    else {       
      cMSG=0;    
    }
    digitalToggle(bluePillLED); //blinky lights are cool
  }
}
